import Action from './Action';
import { anonMessages, mgbetaChatId, REPLY_COUNT } from './mgbeta';
import sample from 'lodash/sample';
import get from 'lodash/get';
import { worker } from 'cluster';

const deanonMessages = ({ username, deanons }) => {
  const msg = sample([
    `üôÑ –¢–∞–∫—É—é —Ö—É–µ—Ç—É –º–æ–≥ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ <b>${username}</b>`,
    `–í–æ—Ç —Ç—ã –∏ —Å–ø–∞–ª–∏–ª—Å—è, <b>${username}</b>`,
    `–≠—Ç–∏–º —Ö–æ—Ä—å–∫–æ–º –±—ã–ª –êÃ∂–ªÃ∂—åÃ∂–±Ã∂–µÃ∂—ÄÃ∂—ÇÃ∂ Ã∂–≠Ã∂–πÃ∂–ΩÃ∂—àÃ∂—ÇÃ∂–µÃ∂–πÃ∂–ΩÃ∂ <b>${username}</b>`,
    `!!!–í–ù–ï–ó–ê–ü–ù–´–ô –î–ï–ê–ù–û–ù!!!\n–•–æ—Ä–µ–∫ ‚Äî <b>${username}</b>`,
    `–ù—É –≤—ã –∏ —Ç–∞–∫ –ø–æ–Ω—è–ª–∏, —á—Ç–æ —ç—Ç–æ <b>${username}</b>`,
    `–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∫ nÃ∂aÃ∂tÃ∂aÃ∂vÃ∂tÃ∂sÃ∂ <b>${username}</b>`,
  ]);
  return `${deanons.map(e => `@${e}`).join(' ')}\n\n${msg}`;
};


export default class deanonVotes extends Action {
  test(message) {
    return message.chat.id === mgbetaChatId && this.testMessageRegExp(message, /(deanon|–¥–µ–∞–Ω–æ–Ω)/);
  }

  doAction(message) {
    if (message.reply_to_message) {
      const userPoll = message.from.username;
      const keyMsgId = get(message, 'reply_to_message.message_id');
      if (!keyMsgId) return;
      const anons = anonMessages[keyMsgId];
      if (!anons) return;
      if (anons.count.includes(userPoll)) return;
      anons.count.push(userPoll);
      if (anons.count.length >= REPLY_COUNT) {
        const { username } = anons;
        this.bot.sendMessage(mgbetaChatId, deanonMessages({ username, deanons: anons.count }), {
          reply_to_message_id: keyMsgId,
        });
        delete anonMessages[message.message_id];
        //console.log(anons, 'anons after delete');
      }
    }
  }
}
