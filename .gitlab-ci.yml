image: docker:latest
cache:
  key: cache_npm
  paths:
    - .npm


stages:
  - npm
  - create_image
  # - test
  - deploy

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}
  CONTAINER_IMAGE_TAG: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}
  CONTAINER_IMAGE_CONCAT: ${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_NAME}
  APP_PATH: /project

npm:
  stage: npm
  image: node:6.9.2
  before_script:
    - npm config set cache ./.npm
  script:
    - git log -1 --format=medium > last_commit_message.txt
    - cat last_commit_message.txt
    - npm install
    - npm run build
  variables:
    NODE_ENV: development
    # NODE_ENV: production
  artifacts:
    paths:
     # - .npm/
     # - node_modules/
     - build/
     - last_commit_message.txt
  only:
    - master

create_image:
  stage: create_image
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_TAG}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_TAG}
  dependencies:
    - npm
  only:
    - master

# test:
#   stage: test
#   image: docker:latest
#   script:
#     - echo "ok"
#   only:
#     - master

depoy:
  stage: deploy
  script:
    - echo "docker stack deploy --with-registry-auth --compose-file=docker-compose.yml ${CONTAINER_IMAGE_CONCAT}"
    - docker stack deploy --with-registry-auth --compose-file=docker-compose.yml ${CONTAINER_IMAGE_CONCAT}
  environment:
    name: master
    url: https://bratishka.mgbeta.ru
  variables:
    STAGE: master
  only:
    - master
  # tags: # FOR RUNNER!
  #   - master
  # when: manual
